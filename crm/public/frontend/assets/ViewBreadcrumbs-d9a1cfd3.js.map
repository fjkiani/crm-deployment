{"version":3,"file":"ViewBreadcrumbs-d9a1cfd3.js","sources":["../../../../node_modules/frappe-ui/src/components/DatePicker/DateRangePicker.vue","../../../../frontend/src/components/ViewBreadcrumbs.vue"],"sourcesContent":["<template>\n  <Popover\n    ref=\"popoverRef\"\n    @open=\"selectCurrentMonthYear\"\n    class=\"flex w-full [&>div:first-child]:w-full\"\n    :placement=\"placement\"\n  >\n    <template #target=\"{ togglePopover }\">\n      <div class=\"flex flex-col space-y-1.5\">\n        <label v-if=\"props.label\" class=\"block text-xs text-ink-gray-5\">\n          {{ props.label }}\n        </label>\n        <TextInput\n          readonly\n          type=\"text\"\n          :placeholder=\"placeholder\"\n          :value=\"dateValue && formatter ? formatDates(dateValue) : dateValue\"\n          @focus=\"!readonly ? togglePopover() : null\"\n          class=\"w-full\"\n          :class=\"inputClass\"\n          v-bind=\"$attrs\"\n        >\n          <template #prefix v-if=\"$slots.prefix\">\n            <slot name=\"prefix\" />\n          </template>\n        </TextInput>\n      </div>\n    </template>\n\n    <template #body=\"{ togglePopover }\">\n      <div\n        class=\"w-fit select-none text-base text-ink-gray-9 divide-y divide-outline-gray-modals rounded-lg bg-surface-modal shadow-2xl ring-1 ring-black ring-opacity-5 focus:outline-none\"\n        :class=\"marginClass\"\n      >\n        <!-- Month Switcher -->\n        <div class=\"flex items-center p-1 text-ink-gray-4\">\n          <Button variant=\"ghost\" class=\"h-7 w-7\" @click=\"prevMonth\">\n            <FeatherIcon\n              :stroke-width=\"2\"\n              name=\"chevron-left\"\n              class=\"h-4 w-4\"\n            />\n          </Button>\n          <div class=\"flex-1 text-center text-base font-medium text-ink-gray-6\">\n            {{ formattedMonth }}\n          </div>\n          <Button variant=\"ghost\" class=\"h-7 w-7\" @click=\"nextMonth\">\n            <FeatherIcon\n              :stroke-width=\"2\"\n              name=\"chevron-right\"\n              class=\"h-4 w-4\"\n            />\n          </Button>\n        </div>\n\n        <!-- Date Range Inputs -->\n        <div class=\"flex items-center justify-center gap-1 p-1\">\n          <TextInput class=\"w-28 text-sm\" type=\"text\" v-model=\"fromDate\" />\n          <TextInput class=\"w-28 text-sm\" type=\"text\" v-model=\"toDate\" />\n        </div>\n\n        <!-- Calendar -->\n        <div\n          class=\"flex flex-col items-center justify-center p-1 text-ink-gray-8\"\n        >\n          <div class=\"flex items-center text-xs uppercase\">\n            <div\n              class=\"flex h-6 w-8 items-center justify-center text-center\"\n              v-for=\"(d, i) in ['s', 'm', 't', 'w', 't', 'f', 's']\"\n              :key=\"i\"\n            >\n              {{ d }}\n            </div>\n          </div>\n          <div\n            class=\"flex items-center\"\n            v-for=\"(week, i) in datesAsWeeks\"\n            :key=\"i\"\n          >\n            <div\n              v-for=\"date in week\"\n              :key=\"getDateValue(date)\"\n              class=\"flex h-8 w-8 cursor-pointer items-center justify-center rounded hover:bg-surface-gray-2\"\n              :class=\"{\n                'text-ink-gray-3': date.getMonth() !== currentMonth - 1,\n                'text-ink-gray-9': date.getMonth() === currentMonth - 1,\n                'font-extrabold text-ink-gray-9':\n                  getDateValue(date) === getDateValue(today),\n                'rounded-none bg-surface-gray-3': isInRange(date),\n                'rounded-l-md rounded-r-none bg-surface-gray-6 text-ink-white hover:bg-surface-gray-6':\n                  fromDate && getDateValue(date) === getDateValue(fromDate),\n                'rounded-r-md bg-surface-gray-6 text-ink-white hover:bg-surface-gray-6':\n                  toDate && getDateValue(date) === getDateValue(toDate),\n              }\"\n              @click=\"() => handleDateClick(date)\"\n            >\n              {{ date.getDate() }}\n            </div>\n          </div>\n        </div>\n\n        <!-- Actions -->\n        <div class=\"flex justify-end space-x-1 p-1\">\n          <Button\n            :label=\"'Clear'\"\n            @click=\"\n              () => {\n                clearDates()\n                togglePopover()\n              }\n            \"\n            :disabled=\"!fromDate || !toDate\"\n          />\n          <Button\n            variant=\"solid\"\n            :label=\"'Apply'\"\n            :disabled=\"!fromDate || !toDate\"\n            @click=\"\n              () => {\n                selectDates()\n                togglePopover()\n              }\n            \"\n          />\n        </div>\n      </div>\n    </template>\n  </Popover>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, onMounted, ref } from 'vue'\n\nimport { Popover } from '../Popover'\nimport { TextInput } from '../TextInput'\n\nimport { useDatePicker } from './useDatePicker'\nimport { getDate, getDateValue } from './utils'\n\nimport type { DatePickerEmits, DatePickerProps } from './types'\n\nconst props = defineProps<DatePickerProps>()\nconst emit = defineEmits<DatePickerEmits>()\n\nconst {\n  currentYear,\n  currentMonth,\n  today,\n  datesAsWeeks,\n  formattedMonth,\n  prevMonth,\n  nextMonth,\n} = useDatePicker()\n\nconst marginClass = computed(() => {\n  let _marginClass = 'mt-2'\n  if (props.placement?.startsWith('top')) {\n    _marginClass = 'mb-2'\n  } else if (props.placement?.startsWith('left')) {\n    _marginClass = 'mr-2'\n  } else if (props.placement?.startsWith('right')) {\n    _marginClass = 'ml-2'\n  }\n  return _marginClass\n})\n\nconst dateValue = computed(() => {\n  return props.value ? props.value : props.modelValue\n})\n\nconst fromDate = ref<string>('')\nconst toDate = ref<string>('')\n\nfunction handleDateClick(date: Date) {\n  if (fromDate.value && toDate.value) {\n    fromDate.value = getDateValue(date)\n    toDate.value = ''\n  } else if (fromDate.value && !toDate.value) {\n    toDate.value = getDateValue(date)\n  } else {\n    fromDate.value = getDateValue(date)\n  }\n  swapDatesIfNecessary()\n}\n\nfunction swapDatesIfNecessary() {\n  if (!fromDate.value || !toDate.value) {\n    return\n  }\n\n  // if fromDate is greater than toDate, swap them\n  let from = getDate(fromDate.value)\n  let to = getDate(toDate.value)\n  if (from > to) {\n    let temp = from\n    from = to\n    to = temp\n  }\n  fromDate.value = getDateValue(from)\n  toDate.value = getDateValue(to)\n}\n\nfunction selectDates() {\n  let val = `${fromDate.value},${toDate.value}`\n  if (!fromDate.value && !toDate.value) {\n    val = ''\n  }\n  emit('change', val)\n  emit('update:modelValue', val)\n}\n\nfunction selectCurrentMonthYear() {\n  let date = toDate.value ? getDate(toDate.value) : today.value\n  currentYear.value = date.getFullYear()\n  currentMonth.value = date.getMonth() + 1\n}\n\nfunction isInRange(date: Date) {\n  if (!fromDate.value || !toDate.value) {\n    return false\n  }\n  return date >= getDate(fromDate.value) && date <= getDate(toDate.value)\n}\n\nfunction formatDates(value: string | string[]) {\n  if (!value) return ''\n\n  if (typeof value === 'string') {\n    value = value.split(',')\n  }\n\n  return props.formatter\n    ? props.formatter(value[0]) + ' to ' + props.formatter(value[1])\n    : value\n}\n\nfunction clearDates() {\n  fromDate.value = ''\n  toDate.value = ''\n  selectDates()\n}\n\nconst popoverRef = ref<InstanceType<typeof Popover>>()\n\nonMounted(() => {\n  let dates: string | string[] | undefined =\n    typeof dateValue?.value === 'string'\n      ? dateValue.value.split(',')\n      : dateValue.value\n  fromDate.value = dates?.[0] || ''\n  toDate.value = dates?.[1] || ''\n\n  selectCurrentMonthYear()\n})\n\ndefineExpose({\n  open: () => {\n    popoverRef.value?.open()\n  },\n})\n</script>\n","<template>\n  <div class=\"flex items-center\">\n    <router-link\n      :to=\"{ name: routeName }\"\n      class=\"px-0.5 py-1 text-lg font-medium focus:outline-none focus-visible:ring-2 focus-visible:ring-outline-gray-3\"\n      :class=\"[\n        viewControls\n          ? 'text-ink-gray-5 hover:text-ink-gray-7'\n          : 'text-ink-gray-7',\n      ]\"\n    >\n      {{ __(routeName) }}\n    </router-link>\n    <span\n      v-if=\"viewControls\"\n      class=\"mx-0.5 text-base text-ink-gray-4\"\n      aria-hidden=\"true\"\n    >\n      /\n    </span>\n    <Dropdown\n      v-if=\"viewControls\"\n      :options=\"viewControls.viewsDropdownOptions\"\n    >\n      <template #default=\"{ open }\">\n        <Button\n          variant=\"ghost\"\n          class=\"text-lg font-medium text-nowrap\"\n          :label=\"__(viewControls.currentView.label)\"\n          :iconRight=\"open ? 'chevron-up' : 'chevron-down'\"\n        >\n          <template #prefix>\n            <Icon :icon=\"viewControls.currentView.icon\" class=\"h-4\" />\n          </template>\n        </Button>\n      </template>\n      <template #item=\"{ item, close }\">\n        <button\n          class=\"group flex text-ink-gray-6 gap-4 h-7 w-full justify-between items-center rounded px-2 text-base hover:bg-surface-gray-3\"\n          @click=\"item.onClick\"\n        >\n          <div class=\"flex items-center\">\n            <FeatherIcon\n              v-if=\"item.icon && typeof item.icon === 'string'\"\n              :name=\"item.icon\"\n              class=\"mr-2 h-4 w-4 flex-shrink-0 text-ink-gray-7\"\n              aria-hidden=\"true\"\n            />\n            <component\n              class=\"mr-2 h-4 w-4 flex-shrink-0 text-ink-gray-7\"\n              v-else-if=\"item.icon\"\n              :is=\"item.icon\"\n            />\n            <span class=\"whitespace-nowrap\">\n              {{ item.label }}\n            </span>\n          </div>\n          <div\n            v-if=\"item.name\"\n            class=\"flex flex-row-reverse gap-2 items-center min-w-11\"\n          >\n            <Dropdown\n              placement=\"right-start\"\n              :options=\"viewControls.viewActions(item, close)\"\n            >\n              <template #default>\n                <Button\n                  variant=\"ghost\"\n                  class=\"!size-5 hidden group-hover:block\"\n                  icon=\"more-horizontal\"\n                  @click.stop\n                />\n              </template>\n            </Dropdown>\n            <FeatherIcon\n              v-if=\"isCurrentView(item)\"\n              name=\"check\"\n              class=\"size-4 text-ink-gray-7\"\n            />\n          </div>\n        </button>\n      </template>\n    </Dropdown>\n  </div>\n</template>\n<script setup>\nimport Icon from '@/components/Icon.vue'\nimport { Dropdown } from 'frappe-ui'\n\nconst props = defineProps({\n  routeName: {\n    type: String,\n    required: true,\n  },\n})\n\nconst viewControls = defineModel()\n\nconst isCurrentView = (item) => {\n  return item.name === viewControls.value.currentView.name\n}\n</script>\n"],"names":["props","__props","emit","__emit","currentYear","currentMonth","today","datesAsWeeks","formattedMonth","prevMonth","nextMonth","useDatePicker","marginClass","computed","_marginClass","_a","_b","_c","dateValue","fromDate","ref","toDate","handleDateClick","date","getDateValue","swapDatesIfNecessary","from","getDate","to","temp","selectDates","val","selectCurrentMonthYear","isInRange","formatDates","value","clearDates","popoverRef","onMounted","dates","__expose","viewControls","_useModel","isCurrentView","item"],"mappings":"2hCA6IA,MAAMA,EAAQC,EACRC,EAAOC,EAEP,CACJ,YAAAC,EACA,aAAAC,EACA,MAAAC,EACA,aAAAC,EACA,eAAAC,EACA,UAAAC,EACA,UAAAC,GACEC,GAAc,EAEZC,EAAcC,EAAS,IAAM,WACjC,IAAIC,EAAe,OACnB,OAAIC,EAAAf,EAAM,YAAN,MAAAe,EAAiB,WAAW,OACfD,EAAA,QACNE,EAAAhB,EAAM,YAAN,MAAAgB,EAAiB,WAAW,QACtBF,EAAA,QACNG,EAAAjB,EAAM,YAAN,MAAAiB,EAAiB,WAAW,WACtBH,EAAA,QAEVA,CAAA,CACR,EAEKI,EAAYL,EAAS,IAClBb,EAAM,MAAQA,EAAM,MAAQA,EAAM,UAC1C,EAEKmB,EAAWC,EAAY,EAAE,EACzBC,EAASD,EAAY,EAAE,EAE7B,SAASE,EAAgBC,EAAY,CAC/BJ,EAAS,OAASE,EAAO,OAClBF,EAAA,MAAQK,EAAaD,CAAI,EAClCF,EAAO,MAAQ,IACNF,EAAS,OAAS,CAACE,EAAO,MAC5BA,EAAA,MAAQG,EAAaD,CAAI,EAEvBJ,EAAA,MAAQK,EAAaD,CAAI,EAEfE,GACvB,CAEA,SAASA,GAAuB,CAC9B,GAAI,CAACN,EAAS,OAAS,CAACE,EAAO,MAC7B,OAIE,IAAAK,EAAOC,EAAQR,EAAS,KAAK,EAC7BS,EAAKD,EAAQN,EAAO,KAAK,EAC7B,GAAIK,EAAOE,EAAI,CACb,IAAIC,EAAOH,EACJA,EAAAE,EACFA,EAAAC,CACP,CACSV,EAAA,MAAQK,EAAaE,CAAI,EAC3BL,EAAA,MAAQG,EAAaI,CAAE,CAChC,CAEA,SAASE,GAAc,CACrB,IAAIC,EAAM,GAAGZ,EAAS,KAAK,IAAIE,EAAO,KAAK,GACvC,CAACF,EAAS,OAAS,CAACE,EAAO,QACvBU,EAAA,IAER7B,EAAK,SAAU6B,CAAG,EAClB7B,EAAK,oBAAqB6B,CAAG,CAC/B,CAEA,SAASC,GAAyB,CAChC,IAAIT,EAAOF,EAAO,MAAQM,EAAQN,EAAO,KAAK,EAAIf,EAAM,MAC5CF,EAAA,MAAQmB,EAAK,cACZlB,EAAA,MAAQkB,EAAK,SAAA,EAAa,CACzC,CAEA,SAASU,EAAUV,EAAY,CAC7B,MAAI,CAACJ,EAAS,OAAS,CAACE,EAAO,MACtB,GAEFE,GAAQI,EAAQR,EAAS,KAAK,GAAKI,GAAQI,EAAQN,EAAO,KAAK,CACxE,CAEA,SAASa,EAAYC,EAA0B,CAC7C,OAAKA,GAED,OAAOA,GAAU,WACXA,EAAAA,EAAM,MAAM,GAAG,GAGlBnC,EAAM,UACTA,EAAM,UAAUmC,EAAM,CAAC,CAAC,EAAI,OAASnC,EAAM,UAAUmC,EAAM,CAAC,CAAC,EAC7DA,GARe,EASrB,CAEA,SAASC,GAAa,CACpBjB,EAAS,MAAQ,GACjBE,EAAO,MAAQ,GACHS,GACd,CAEA,MAAMO,EAAajB,IAEnB,OAAAkB,EAAU,IAAM,CACV,IAAAC,EACF,OAAOrB,GAAA,YAAAA,EAAW,QAAU,SACxBA,EAAU,MAAM,MAAM,GAAG,EACzBA,EAAU,MACPC,EAAA,OAAQoB,GAAA,YAAAA,EAAQ,KAAM,GACxBlB,EAAA,OAAQkB,GAAA,YAAAA,EAAQ,KAAM,GAENP,GAAA,CACxB,EAEYQ,EAAA,CACX,KAAM,IAAM,QACVzB,EAAAsB,EAAW,QAAX,MAAAtB,EAAkB,MACpB,CAAA,CACD,44FCnKD,MAAM0B,EAAeC,GAAYzC,EAAA,YAAA,EAE3B0C,EAAiBC,GACdA,EAAK,OAASH,EAAa,MAAM,YAAY","x_google_ignoreList":[0]}